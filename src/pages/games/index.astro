---
import Layout from "@layouts/Layout.astro";
import {deleteGameById, getAllGamesByUser} from "@lib/database";
import {getUser} from "@lib/auth";
import type { Image } from "astro:assets";


const user = await getUser(Astro.request);
const userId = user?.user?.id

if (!userId) {
  return Astro.redirect("/login");
}

const {data, error} = userId ? await getAllGamesByUser(userId) : {data: [], error: null}
const sortedData = data?.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())


---
<Layout title="games">
  <main class="max-w-3xl mx-auto min-h-screen font-mono p-4">
    <h1 class="text-3xl font-bold">Welcome to Greedy App</h1>
    <p class="text-gray-500 mt-2">You can use this app to track the games you play</p>
    <div class="space-y-2">
      <h2 class="text-2xl font-bold mt-8">Create a New Game</h2>
    <a
      class=" block mt-8 border w-fit sm:p-8 p-4 bg-black rounded text-white hover:cursor-pointer hover:bg-gray-700 hover:border hover:border-black transition-all"
      href="/games/new"
    >
    Create New Game</a>
    </div>


    <h2 class="text-2xl font-bold mt-8">Your Games In Progress</h2>
    <div class="grid sm:grid-cols-3 gap-2 mt-4">
      {data && data?.length > 0 && sortedData ? sortedData.map((game) => {
        return (
          <div class="col-span-1 border-2 border-black text-black hover:bg-gray-300 hover:cursor-pointer transition-all relative group px-4 pb-4">
            <button class="absolute top-4 right-4 z-10 hidden group-hover:block p-[5px]" id="deleteGameButton" data-game-id={game.id} >‚ùå</button>
            <a
              class="  rounded "
              href={`/games/${game.id}`}
            >
              <div class="flex justify-between my-2">
                <h2 class=" text-xl ">{game.type}</h2>
              <p class="text-md text-gray-700 self-center">{new Date(game.created_at).toLocaleDateString()}</p>
              </div>
            
              <h3 class="text-center" >Player Scores</h3>
              <ul class="flex justify-evenly gap-2">
                {Object.keys(game.scores).map((player) => {
                  return (
                    <li>
                      <h2 class=" font-semibold">{player}</h2>
                      <div class="flex flex-col">{game.scores[player].map((score: number[]) => {
                        return <div>{score}</div>
                      })}</div>
                    </li>
                )})}
              </ul>
            </a>
        </div>
        )}) : <p>You don't have any games yet...</p>}
      </div>
    </main>
</Layout>


<script>
  async function handleClick ({target}: {target: any}) {
    let data = await fetch("/api/games/delete", {
      method: "DELETE",
      body: JSON.stringify({
        gameId: target.dataset.gameId
      })
    })
    document.location.reload()
  }
  document.getElementById("deleteGameButton")?.addEventListener("click", handleClick);

</script>